Compiled from "macro_readstring.clj"
public final class org.timmc.sscce.macro_readstring$_main$fail_init__1169 extends clojure.lang.AFunction
  SourceFile: "macro_readstring.clj"
  SourceDebugExtension: length = 0x7F
   53 4D 41 50 0A 6D 61 63 72 6F 5F 72 65 61 64 73
   74 72 69 6E 67 2E 6A 61 76 61 0A 43 6C 6F 6A 75
   72 65 0A 2A 53 20 43 6C 6F 6A 75 72 65 0A 2A 46
   0A 2B 20 31 20 6D 61 63 72 6F 5F 72 65 61 64 73
   74 72 69 6E 67 2E 63 6C 6A 0A 6F 72 67 2F 74 69
   6D 6D 63 2F 73 73 63 63 65 2F 6D 61 63 72 6F 5F
   72 65 61 64 73 74 72 69 6E 67 2E 63 6C 6A 0A 2A
   4C 0A 31 33 23 31 2C 31 30 3A 31 33 0A 2A 45 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	org/timmc/sscce/macro_readstring$_main$fail_init__1169;
const #2 = class	#1;	//  org/timmc/sscce/macro_readstring$_main$fail_init__1169
const #3 = Asciz	clojure/lang/AFunction;
const #4 = class	#3;	//  clojure/lang/AFunction
const #5 = Asciz	macro_readstring.clj;
const #6 = Asciz	const__0;
const #7 = Asciz	Lclojure/lang/Var;;
const #8 = Asciz	const__1;
const #9 = Asciz	const__2;
const #10 = Asciz	Ljava/lang/Object;;
const #11 = Asciz	<clinit>;
const #12 = Asciz	()V;
const #13 = Asciz	clojure.core;
const #14 = String	#13;	//  clojure.core
const #15 = Asciz	println;
const #16 = String	#15;	//  println
const #17 = Asciz	clojure/lang/RT;
const #18 = class	#17;	//  clojure/lang/RT
const #19 = Asciz	var;
const #20 = Asciz	(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;;
const #21 = NameAndType	#19:#20;//  var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
const #22 = Method	#18.#21;	//  clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
const #23 = Asciz	clojure/lang/Var;
const #24 = class	#23;	//  clojure/lang/Var
const #25 = NameAndType	#6:#7;//  const__0:Lclojure/lang/Var;
const #26 = Field	#2.#25;	//  org/timmc/sscce/macro_readstring$_main$fail_init__1169.const__0:Lclojure/lang/Var;
const #27 = Asciz	str;
const #28 = String	#27;	//  str
const #29 = NameAndType	#8:#7;//  const__1:Lclojure/lang/Var;
const #30 = Field	#2.#29;	//  org/timmc/sscce/macro_readstring$_main$fail_init__1169.const__1:Lclojure/lang/Var;
const #31 = Asciz	#=(find-ns org.timmc.sscce.macro-readstring);
const #32 = String	#31;	//  #=(find-ns org.timmc.sscce.macro-readstring)
const #33 = Asciz	readString;
const #34 = Asciz	(Ljava/lang/String;)Ljava/lang/Object;;
const #35 = NameAndType	#33:#34;//  readString:(Ljava/lang/String;)Ljava/lang/Object;
const #36 = Method	#18.#35;	//  clojure/lang/RT.readString:(Ljava/lang/String;)Ljava/lang/Object;
const #37 = NameAndType	#9:#10;//  const__2:Ljava/lang/Object;
const #38 = Field	#2.#37;	//  org/timmc/sscce/macro_readstring$_main$fail_init__1169.const__2:Ljava/lang/Object;
const #39 = Asciz	<init>;
const #40 = NameAndType	#39:#12;//  "<init>":()V
const #41 = Method	#4.#40;	//  clojure/lang/AFunction."<init>":()V
const #42 = Asciz	invoke;
const #43 = Asciz	()Ljava/lang/Object;;
const #44 = Asciz	getRawRoot;
const #45 = NameAndType	#44:#43;//  getRawRoot:()Ljava/lang/Object;
const #46 = Method	#24.#45;	//  clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
const #47 = Asciz	clojure/lang/IFn;
const #48 = class	#47;	//  clojure/lang/IFn
const #49 = Asciz	You're in this namespace:;
const #50 = String	#49;	//  You're in this namespace:
const #51 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #52 = NameAndType	#42:#51;//  invoke:(Ljava/lang/Object;)Ljava/lang/Object;
const #53 = InterfaceMethod	#48.#52;	//  clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
const #54 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #55 = NameAndType	#42:#54;//  invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #56 = InterfaceMethod	#48.#55;	//  clojure/lang/IFn.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #57 = Asciz	this;
const #58 = Asciz	Code;
const #59 = Asciz	LineNumberTable;
const #60 = Asciz	LocalVariableTable;
const #61 = Asciz	SourceFile;
const #62 = Asciz	SourceDebugExtension;

{
public static final clojure.lang.Var const__0;
  Signature: Lclojure/lang/Var;


public static final clojure.lang.Var const__1;
  Signature: Lclojure/lang/Var;


public static final java.lang.Object const__2;
  Signature: Ljava/lang/Object;


public static {};
  Signature: ()V
  LineNumberTable: 
   line 22: 0



  Code:
   Stack=2, Locals=0, Args_size=0
   0:	ldc	#14; //String clojure.core
   2:	ldc	#16; //String println
   4:	invokestatic	#22; //Method clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
   7:	checkcast	#24; //class clojure/lang/Var
   10:	putstatic	#26; //Field const__0:Lclojure/lang/Var;
   13:	ldc	#14; //String clojure.core
   15:	ldc	#28; //String str
   17:	invokestatic	#22; //Method clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
   20:	checkcast	#24; //class clojure/lang/Var
   23:	putstatic	#30; //Field const__1:Lclojure/lang/Var;
   26:	ldc	#32; //String #=(find-ns org.timmc.sscce.macro-readstring)
   28:	invokestatic	#36; //Method clojure/lang/RT.readString:(Ljava/lang/String;)Ljava/lang/Object;
   31:	putstatic	#38; //Field const__2:Ljava/lang/Object;
   34:	return
  LineNumberTable: 
   line 22: 0


public org.timmc.sscce.macro_readstring$_main$fail_init__1169();
  Signature: ()V
  LineNumberTable: 
   line 22: 0



  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#41; //Method clojure/lang/AFunction."<init>":()V
   4:	return
  LineNumberTable: 
   line 22: 0


public java.lang.Object invoke();
  Signature: ()Ljava/lang/Object;
  LineNumberTable: 
   line 22: 0
   line 22: 0
   line 22: 11

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Ljava/lang/Object;


  Code:
   Stack=4, Locals=1, Args_size=1
   0:	getstatic	#26; //Field const__0:Lclojure/lang/Var;
   3:	invokevirtual	#46; //Method clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
   6:	checkcast	#48; //class clojure/lang/IFn
   9:	ldc	#50; //String You're in this namespace:
   11:	getstatic	#30; //Field const__1:Lclojure/lang/Var;
   14:	invokevirtual	#46; //Method clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
   17:	checkcast	#48; //class clojure/lang/IFn
   20:	getstatic	#38; //Field const__2:Ljava/lang/Object;
   23:	invokeinterface	#53,  2; //InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
   28:	invokeinterface	#56,  3; //InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   33:	areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Ljava/lang/Object;

  LineNumberTable: 
   line 22: 0
   line 22: 0
   line 22: 11


}

